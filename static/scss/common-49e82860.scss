html,
body {
	width: 100%;
	height: 100%;
	line-height: 1.5;
	overflow-x: hidden;
	// color: $colorText;
	& > div {
		font-size: $fontBase; // 默认字号
	}
}
/* -------------------- 字体大小 -------------------- */
$fonts: (
	10: $font10,
	12: $font12,
	14: $font14,
	16: $font16,
	18: $font18,
);
@each $key, $size in $fonts {
	.#{$prefix}-font-#{$key} {
		font-size: $size;
		// -webkit-transform: scale( $size/12 );
	}
}
/* --------------------- 字体颜色 & 背景 ---------------------- */
$colors: (
	white: $colorWhite,
	blue: $colorBlue,
	red: $colorRed,
	green: $colorGreen,
	yellow: $colorYellow,
	orange: $colorOrange,
	title: $colorText,
	text: $colorText,
	tip: $colorTip,
	border: $colorBorder,
	shadow: $colorShadow,
);
@each $name, $color in $colors {
	.#{$prefix}-color-#{'' + $name} {
		color: $color;
	}
}
// 背景颜色样式
.#{$prefix}-bg {
	background: $colorBg;
}
.#{$prefix}-bg-white {
	background: $colorWhite;
}

.#{$prefix}-shadow {
	box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1);
}

/*-------------------- border 公共样式 ----------------------- */
[class*='#{$prefix}-border']::after {
	position: absolute;
	box-sizing: border-box;
	content: ' ';
	pointer-events: none;
	top: -50%;
	right: -50%;
	bottom: -50%;
	left: -50%;
	border: 0 solid $colorBorder;
	//border: 0 solid #f40;
	/* 颜色可以用变量 $colorBorder:xxx */
	-webkit-transform: scale(0.5);
	-ms-transform: scale(0.5);
	transform: scale(0.5);
}

// $widths:(5, 10, 15, 20, 24);
$widths: (1, 2, 3, 4, 5); // 边框的大小
$borders: (top, $widths), (right, $widths), (bottom, $widths), (left, $widths), (x, $widths),
	(y, $widths), (0, $widths), (all, $widths);

@each $direction, $num in $borders {
	// 无边框
	@if ($direction==0) {
		.#{$prefix}-border-0 {
			position: relative;

			&::after {
				border: none !important; // 默认权重最高
			}
		}
	}

	// 全边框
	@else if($direction==all) {
		@each $n in $num {
			.#{$prefix}-border-#{$n} {
				position: relative;

				&::after {
					border-width: #{$n}px;
				}
			}
		}
	}

	// top-bottom 边框
	@else if($direction==y) {
		@each $n in $num {
			.#{$prefix}-border-#{$direction}-#{$n} {
				position: relative;

				&::after {
					border-width: #{$n}px 0;
				}
			}
		}
	}

	// letf-right 边框
	@else if($direction==x) {
		@each $n in $num {
			.#{$prefix}-border-#{$direction}-#{$n} {
				position: relative;

				&::after {
					border-width: 0 #{$n}px;
				}
			}
		}
	}

	// top,right,bottom,left 单方向边框
	@else {
		@each $n in $num {
			.#{$prefix}-border-#{$direction}-#{$n} {
				position: relative;

				&::after {
					border-#{$direction}-width: #{$n}PX !important;
				}
			}
		}
	}
}

/* -----------------------  margin 外边距 -----------------------  */
$margins: (5, 8, 10, 15, 20);
@for $i from 1 through 5 {
	.#{$prefix}-margin-#{nth($margins, $i)} {
		margin: #{nth($margins, $i)}px;
	} // 全方向外边距
	.#{$prefix}-margin-top-#{nth($margins, $i)} {
		margin-top: #{nth($margins, $i)}px;
	} // 上外边距
	.#{$prefix}-margin-right-#{nth($margins, $i)} {
		margin-right: #{nth($margins, $i)}px;
	} // 右外边距
	.#{$prefix}-margin-bottom-#{nth($margins, $i)} {
		margin-bottom: #{nth($margins, $i)}px;
	} // 下外边距
	.#{$prefix}-margin-left-#{nth($margins, $i)} {
		margin-left: #{nth($margins, $i)}px;
	} // 左外边距
}
.#{$prefix}-margin-box {
	margin: 10px 15px;
}

/* -----------------------  padding 内边距 -----------------------  */
$paddings: (5, 8, 10, 15, 20, 24, 30);
@for $i from 1 through 6 {
	.#{$prefix}-padding-#{nth($paddings, $i)} {
		padding: #{nth($paddings, $i)}px;
	} // 全方向内边距
	.#{$prefix}-padding-top-#{nth($paddings, $i)} {
		padding-top: #{nth($paddings, $i)}px;
	} // 上内边距
	.#{$prefix}-padding-right-#{nth($paddings, $i)} {
		padding-right: #{nth($paddings, $i)}px;
	} // 右内边距
	.#{$prefix}-padding-bottom-#{nth($paddings, $i)} {
		padding-bottom: #{nth($paddings, $i)}px;
	} // 下内边距
	.#{$prefix}-padding-left-#{nth($paddings, $i)} {
		padding-left: #{nth($paddings, $i)}px;
	} // 左内边距
}
.#{$prefix}-padding-box {
	padding: 10px 15px;
}
[class^='#{$prefix}-padding'] {
	box-sizing: border-box;
}

/* -------------- 文本类型: title、text、tip ...----------------  */
$title: title, $font18, $colorText; // 标题文本样式
$text: text, $fontBase, $colorText; // 正常文本样式
$tip: tip, $font12, $colorTip; // 提示文本样式
@each $type, $fs, $color in $title, $text, $tip {
	.#{$prefix}-#{$type} {
		font-size: $fs;
		color: $color;
		line-height: 1.5;
	}
}

/*  ----------- 文本超出限制显示行数部分以省略号... 显示 ------------ */
@for $i from 1 through 6 {
	.#{$prefix}-line-#{$i} {
		display: block;
		overflow: hidden;
		text-overflow: ellipsis;
		-o-text-overflow: ellipsis;
		word-break: break-all; // 允许在单词内换行
		display: -webkit-box;
		-webkit-line-clamp: $i; // 变量限制显示行数
		/*! autoprefixer: ignore next */
		-webkit-box-orient: vertical;
	}
}

/* ------------- text-align 文本对齐方式 ------------- */
@each $type in (center, left, right, justify, inherit) {
	.#{$prefix}-align-#{$type} {
		text-align: #{$type};
	}
}
/* ------------- flex 弹性布局 ------------- */
[class*='#{$prefix}-flex'] {
	display: -webkit-flex;
	display: flex;
}

$flexs: (ai, center), (jc, space-between), (ai-jc, ''), (center, ''), (column, column), (wrap, wrap),
	(nowrap, nowrap), (flex, (1, 2, 3, 4));
@each $key, $val in $flexs {
	@if ($key==ai) {
		// 仅垂直居中
		.#{$prefix}-flex-#{$key} {
			align-items: $val;
		}
	} @else if($key==jc) {
		// 仅两端对齐
		.#{$prefix}-flex-#{$key} {
			justify-content: $val;
		}
	} @else if($key==ai-jc) {
		// 垂直居中 两端对齐
		.#{$prefix}-flex-#{$key},
		.#{$prefix}-flex-jc-ai {
			align-items: center;
			justify-content: space-between;
		}
	} @else if($key==center) {
		// 垂直居中 水平居中
		.#{$prefix}-flex-#{$key} {
			align-items: center;
			justify-content: center;
		}
	} @else if($key==column) {
		// 竖向排列
		.#{$prefix}-flex-#{$key} {
			flex-direction: $val;
		}
	} @else if($key==wrap) {
		// 可换行
		.#{$prefix}-flex-#{$key} {
			flex-wrap: $val;
		}
	} @else if($key==nowrap) {
		// 不换行
		.#{$prefix}-#{$key} {
			white-space: $val;
		}
	} @else if($key==flex) {
		// flex 占位等分 1|2|3|4
		@each $i in $val {
			.#{$prefix}-flex-#{$i} {
				flex: $i;
			}
		}
	} @else {
		// 不压缩
		.#{$prefix}-shrink {
			flex-shrink: 0;
		}
	}
}
/* ------------------- position 定位布局 ------------------- */
// 定位居中
.#{$prefix}-center {
	width: 100%;
	position: absolute;
	left: 50%;
	top: 50%;
	transform: translate(-50%, -50%);
}
// 定位顶部
.#{$prefix}-header,
.#{$prefix}-top {
	//position: fixed;
	position: absolute;
	z-index: 10;
	top: 0;
	left: 0;
	right: 0;
}
// 定位内容视图
.#{$prefix}-main,
.#{$prefix}-wrapper {
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	overflow-y: scroll;
}
// 定位底部
.#{$prefix}-footer,
.#{$prefix}-bottom {
	//position: fixed;
	position: absolute;
	z-index: 10;
	bottom: 0;
	left: 0;
	right: 0;
}

/* ------------------- 宽度、高度 ------------------- */
.#{$prefix}-width-100pc {
	width: 100%;
}
.#{$prefix}-height-100pc {
	height: 100%;
}
.#{$prefix}-wrapper {
	width: 100%;
	height: 100%;
} // 页面容器
@each $type, $sizes in ((width, (48, 216, 296)), (height, (28, 48, 68))) {
	@if ($type==width) {
		@each $var in $sizes {
			.#{$prefix}-width-#{$var} {
				width: #{$var}px;
			}
		}
	} @else if($type==height) {
		@each $var in $sizes {
			.#{$prefix}-height-#{$var} {
				height: #{$var}px;
			}
		}
	}
}

// 必填项 * 样式
.#{$prefix}-required {
	.van-cell__title {
		position: relative;

		&::after {
			content: '*';
			color: $colorRed;
			position: absolute;
			width: 100%;
			font-size: $font16;
		}
	}
}

// 样式 reset
.#{$prefix}-reset {
	margin: 0;
	padding: 0;
	border: 0;
	//font-size: 100%;
	//vertical-align: baseline;
}

// 安全区域
.safe-area-inset-top {
	padding-top: constant(safe-area-inset-top);
	padding-top: env(safe-area-inset-top);
}
.safe-area-inset-bottom {
	padding-bottom: constant(safe-area-inset-bottom);
	padding-bottom: env(safe-area-inset-bottom);
}

.van-theme-light body {
	background-color: #f8f8f8 !important;
}

.van-theme-dark body {
	// --colorText: #999 !important;
	text-color: #f5f5f5 !important;
	// --van-cell-border-color: #999;
	color: #f5f5f5;
	background-color: var(--van-black) !important;

	.time-picker {
		background-color: var(--van-black) !important;
		.time-bar {
			background-color: var(--van-black) !important;
		}
	}

	:-webkit-autofill {
		box-shadow: 0 0 0px 1000px var(--van-background-2) inset !important;
	}
	.router-view,
	.layout__container,
	.st-bg-white,
	.st-bg {
		background-color: var(--van-black) !important;
	}

	.login-wrapper {
		background: none !important;
	}

	.bottom-button--submit {
		background-color: var(--van-background-2) !important;
	}

	.van-field__control {
		background: 0 0;
	}

	.signature-wrapper {
		// background-color: var(--van-background-2) !important;
	}
	.signature__control {
		background-color: var(--van-background-2) !important;
	}

	.search-filter-wrapper .van-search {
		background-color: var(--van-background-2) !important;
	}

	.filter-item-label {
		background-color: var(--van-black) !important;
	}
	.filter-button-reset {
		background-color: var(--van-background-3) !important;
	}
}

.no-scrollbar {
	/*IE下隐藏滚动条*/
	// -ms-scroll-chaining: chained;
	// -ms-overflow-style: none;
	// -ms-content-zooming: zoom;
	// -ms-scroll-rails: none;
	// -ms-content-zoom-limit-min: 100%;
	// -ms-content-zoom-limit-max: 500%;
	// // -ms-scroll-snap-type: proximity;
	// -ms-scroll-snap-points-x: snapList(100%, 200%, 300%, 400%, 500%);
	-ms-overflow-style: none;
	overflow: auto;
	/*火狐下隐藏滚动条*/
	scrollbar-width: none;

	/*谷歌下隐藏滚动条*/
	&::-webkit-scrollbar {
		display: none;
	}
}

// 进度条样式覆盖
#nprogress .bar {
	background: var(--van-blue) !important;
}

// html.van-theme-dark {
// 	color-scheme: dark;
// }

// @media screen and (min-width: 768px) {
//   html {
//     /* prettier-ignore */
//     font-size: 50PX !important;
//   }
// }

// @media (min-width: 600px) and (min-height: 640px) {
// 	#app {
// 		max-width: 600px !important;
// 	}
// }

@media screen and (orientation: portrait) {
	/*竖屏...*/
	// body {
	// 	color: red !important;
	// }
}
@media screen and (orientation: landscape) {
	/*横屏...*/
}
