var e=Object.defineProperty,t=Object.defineProperties,i=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,o=(t,i,s)=>i in t?e(t,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[i]=s;import{s as n}from"./vue-resize-8878d15a.js";import{O as a}from"./vue-observe-visibility-c5c8dc56.js";import{P as d,U as c,aP as u,C as h,v as m,aI as p,ak as f,aO as y,aj as g,ai as v,b7 as b,F as $,aN as S,aQ as w,t as _,aY as z,a4 as I,a2 as T,l as x}from"./@vue-0da0c2e3.js";var V=1e3,M=/(auto|scroll)/;function P(e,t){return null===e.parentNode?t:P(e.parentNode,t.concat([e]))}var k=function(e,t){return getComputedStyle(e,null).getPropertyValue(t)},L=function(e){return M.test(function(e){return k(e,"overflow")+k(e,"overflow-y")+k(e,"overflow-x")}(e))};function O(e){if(e instanceof HTMLElement||e instanceof SVGElement){for(var t=P(e.parentNode,[]),i=0;i<t.length;i+=1)if(L(t[i]))return t[i];return document.scrollingElement||document.documentElement}}function E(e){return(E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var j={items:{type:Array,required:!0},keyField:{type:String,default:"id"},direction:{type:String,default:"vertical",validator:function(e){return["vertical","horizontal"].includes(e)}},listTag:{type:String,default:"div"},itemTag:{type:String,default:"div"}};var N=!1;if("undefined"!=typeof window){N=!1;try{var R=Object.defineProperty({},"passive",{get:function(){N=!0}});window.addEventListener("test",null,R)}catch(K){}}let C=0;var F,H,B={name:"RecycleScroller",components:{ResizeObserver:n},directives:{ObserveVisibility:a},props:(F=((e,t)=>{for(var i in t||(t={}))r.call(t,i)&&o(e,i,t[i]);if(s)for(var i of s(t))l.call(t,i)&&o(e,i,t[i]);return e})({},j),H={itemSize:{type:Number,default:null},gridItems:{type:Number,default:void 0},itemSecondarySize:{type:Number,default:void 0},minItemSize:{type:[Number,String],default:null},sizeField:{type:String,default:"size"},typeField:{type:String,default:"type"},buffer:{type:Number,default:200},pageMode:{type:Boolean,default:!1},prerender:{type:Number,default:0},emitUpdate:{type:Boolean,default:!1},updateInterval:{type:Number,default:0},skipHover:{type:Boolean,default:!1},listTag:{type:String,default:"div"},itemTag:{type:String,default:"div"},listClass:{type:[String,Object,Array],default:""},itemClass:{type:[String,Object,Array],default:""}},t(F,i(H))),emits:["resize","visible","hidden","update","scroll-start","scroll-end"],data:()=>({pool:[],totalSize:0,ready:!1,hoverKey:null}),computed:{sizes(){if(null===this.itemSize){const e={"-1":{accumulator:0}},t=this.items,i=this.sizeField,s=this.minItemSize;let r,l=1e4,o=0;for(let n=0,a=t.length;n<a;n++)r=t[n][i]||s,r<l&&(l=r),o+=r,e[n]={accumulator:o,size:r};return this.$_computedMinItemSize=l,e}return[]},simpleArray:function(){return this.items.length&&"object"!==E(this.items[0])},itemIndexByKey(){const{keyField:e,items:t}=this,i={};for(let s=0,r=t.length;s<r;s++)i[t[s][e]]=s;return i}},watch:{items(){this.updateVisibleItems(!0)},pageMode(){this.applyPageMode(),this.updateVisibleItems(!1)},sizes:{handler(){this.updateVisibleItems(!1)},deep:!0},gridItems(){this.updateVisibleItems(!0)},itemSecondarySize(){this.updateVisibleItems(!0)}},created(){this.$_startIndex=0,this.$_endIndex=0,this.$_views=new Map,this.$_unusedViews=new Map,this.$_scrollDirty=!1,this.$_lastUpdateScrollPosition=0,this.prerender&&(this.$_prerender=!0,this.updateVisibleItems(!1)),this.gridItems&&!this.itemSize&&console.error("[vue-recycle-scroller] You must provide an itemSize when using gridItems")},mounted(){this.applyPageMode(),this.$nextTick((()=>{this.$_prerender=!1,this.updateVisibleItems(!0),this.ready=!0}))},activated(){const e=this.$_lastUpdateScrollPosition;"number"==typeof e&&this.$nextTick((()=>{this.scrollToPosition(e)}))},beforeUnmount(){this.removeListeners()},methods:{addView(e,t,i,s,r){const l=d({id:C++,index:t,used:!0,key:s,type:r}),o=c({item:i,position:0,nr:l});return e.push(o),o},unuseView(e,t=!1){const i=this.$_unusedViews,s=e.nr.type;let r=i.get(s);r||(r=[],i.set(s,r)),r.push(e),t||(e.nr.used=!1,e.position=-9999)},handleResize(){this.$emit("resize"),this.ready&&this.updateVisibleItems(!1)},handleScroll(e){if(!this.$_scrollDirty){if(this.$_scrollDirty=!0,this.$_updateTimeout)return;const e=()=>requestAnimationFrame((()=>{this.$_scrollDirty=!1;const{continuous:e}=this.updateVisibleItems(!1,!0);e||(clearTimeout(this.$_refreshTimout),this.$_refreshTimout=setTimeout(this.handleScroll,this.updateInterval+100))}));e(),this.updateInterval&&(this.$_updateTimeout=setTimeout((()=>{this.$_updateTimeout=0,this.$_scrollDirty&&e()}),this.updateInterval))}},handleVisibilityChange(e,t){this.ready&&(e||0!==t.boundingClientRect.width||0!==t.boundingClientRect.height?(this.$emit("visible"),requestAnimationFrame((()=>{this.updateVisibleItems(!1)}))):this.$emit("hidden"))},updateVisibleItems(e,t=!1){const i=this.itemSize,s=this.gridItems||1,r=this.itemSecondarySize||i,l=this.$_computedMinItemSize,o=this.typeField,n=this.simpleArray?null:this.keyField,a=this.items,d=a.length,c=this.sizes,u=this.$_views,h=this.$_unusedViews,m=this.pool,p=this.itemIndexByKey;let f,y,g,v,b,$;if(d)if(this.$_prerender)f=v=0,y=b=Math.min(this.prerender,a.length),g=null;else{const e=this.getScroll();if(t){let t=e.start-this.$_lastUpdateScrollPosition;if(t<0&&(t=-t),null===i&&t<l||t<i)return{continuous:!0}}this.$_lastUpdateScrollPosition=e.start;const r=this.buffer;e.start-=r,e.end+=r;let o=0;if(this.$refs.before&&(o=this.$refs.before.scrollHeight,e.start-=o),this.$refs.after){const t=this.$refs.after.scrollHeight;e.end+=t}if(null===i){let t,i,s=0,r=d-1,l=~~(d/2);do{i=l,t=c[l].accumulator,t<e.start?s=l:l<d-1&&c[l+1].accumulator>e.start&&(r=l),l=~~((s+r)/2)}while(l!==i);for(l<0&&(l=0),f=l,g=c[d-1].accumulator,y=l;y<d&&c[y].accumulator<e.end;y++);for(-1===y?y=a.length-1:(y++,y>d&&(y=d)),v=f;v<d&&o+c[v].accumulator<e.start;v++);for(b=v;b<d&&o+c[b].accumulator<e.end;b++);}else{f=~~(e.start/i*s);f-=f%s,y=Math.ceil(e.end/i*s),v=Math.max(0,Math.floor((e.start-o)/i*s)),b=Math.floor((e.end-o)/i*s),f<0&&(f=0),y>d&&(y=d),v<0&&(v=0),b>d&&(b=d),g=Math.ceil(d/s)*i}}else f=y=v=b=g=0;y-f>V&&this.itemsLimitError(),this.totalSize=g;const S=f<=this.$_endIndex&&y>=this.$_startIndex;if(S)for(let T=0,x=m.length;T<x;T++)$=m[T],$.nr.used&&(e&&($.nr.index=p[$.item[n]]),(null==$.nr.index||$.nr.index<f||$.nr.index>=y)&&this.unuseView($));const w=S?null:new Map;let _,z,I;for(let T=f;T<y;T++){_=a[T];const e=n?_[n]:_;if(null==e)throw new Error(`Key is ${e} on item (keyField is '${n}')`);if($=u.get(e),!i&&!c[T].size){$&&this.unuseView($);continue}z=_[o];let t=h.get(z),l=!1;if($){if(!$.nr.used&&($.nr.used=!0,l=!0,t)){const e=t.indexOf($);-1!==e&&t.splice(e,1)}}else S?$=t&&t.length?t.pop():this.addView(m,T,_,e,z):(I=w.get(z)||0,(!t||I>=t.length)&&($=this.addView(m,T,_,e,z),this.unuseView($,!0),t=h.get(z)),$=t[I],w.set(z,I+1)),u.delete($.nr.key),$.nr.used=!0,$.nr.index=T,$.nr.key=e,$.nr.type=z,u.set(e,$),l=!0;$.item=_,l&&(T===a.length-1&&this.$emit("scroll-end"),0===T&&this.$emit("scroll-start")),null===i?($.position=c[T-1].accumulator,$.offset=0):($.position=Math.floor(T/s)*i,$.offset=T%s*r)}return this.$_startIndex=f,this.$_endIndex=y,this.emitUpdate&&this.$emit("update",f,y,v,b),clearTimeout(this.$_sortTimer),this.$_sortTimer=setTimeout(this.sortViews,this.updateInterval+300),{continuous:S}},getListenerTarget(){let e=O(this.$el);return!window.document||e!==window.document.documentElement&&e!==window.document.body||(e=window),e},getScroll(){const{$el:e,direction:t}=this,i="vertical"===t;let s;if(this.pageMode){const t=e.getBoundingClientRect(),r=i?t.height:t.width;let l=-(i?t.top:t.left),o=i?window.innerHeight:window.innerWidth;l<0&&(o+=l,l=0),l+o>r&&(o=r-l),s={start:l,end:l+o}}else s=i?{start:e.scrollTop,end:e.scrollTop+e.clientHeight}:{start:e.scrollLeft,end:e.scrollLeft+e.clientWidth};return s},applyPageMode(){this.pageMode?this.addListeners():this.removeListeners()},addListeners(){this.listenerTarget=this.getListenerTarget(),this.listenerTarget.addEventListener("scroll",this.handleScroll,!!N&&{passive:!0}),this.listenerTarget.addEventListener("resize",this.handleResize)},removeListeners(){this.listenerTarget&&(this.listenerTarget.removeEventListener("scroll",this.handleScroll),this.listenerTarget.removeEventListener("resize",this.handleResize),this.listenerTarget=null)},scrollToItem(e){let t;const i=this.gridItems||1;t=null===this.itemSize?e>0?this.sizes[e-1].accumulator:0:Math.floor(e/i)*this.itemSize,this.scrollToPosition(t)},scrollToPosition(e){const t="vertical"===this.direction?{scroll:"scrollTop",start:"top"}:{scroll:"scrollLeft",start:"left"};let i,s,r;if(this.pageMode){const l=O(this.$el),o="HTML"===l.tagName?0:l[t.scroll],n=l.getBoundingClientRect(),a=this.$el.getBoundingClientRect()[t.start]-n[t.start];i=l,s=t.scroll,r=e+o+a}else i=this.$el,s=t.scroll,r=e;i[s]=r},itemsLimitError(){throw setTimeout((()=>{console.log("It seems the scroller element isn't scrolling, so it tries to render all the items at once.","Scroller:",this.$el),console.log("Make sure the scroller has a fixed height (or width) and 'overflow-y' (or 'overflow-x') set to 'auto' so it can scroll correctly and only render the items visible in the scroll viewport.")})),new Error("Rendered items limit reached")},sortViews(){this.pool.sort(((e,t)=>e.nr.index-t.nr.index))}}};const U={key:0,ref:"before",class:"vue-recycle-scroller__slot"},A={key:1,ref:"after",class:"vue-recycle-scroller__slot"};B.render=function(e,t,i,s,r,l){const o=u("ResizeObserver"),n=h("observe-visibility");return m((p(),f("div",{class:T(["vue-recycle-scroller",{ready:r.ready,"page-mode":i.pageMode,[`direction-${e.direction}`]:!0}]),onScrollPassive:t[0]||(t[0]=(...e)=>l.handleScroll&&l.handleScroll(...e))},[e.$slots.before?(p(),f("div",U,[y(e.$slots,"before")],512)):g("v-if",!0),(p(),v(w(i.listTag),{ref:"wrapper",style:I({["vertical"===e.direction?"minHeight":"minWidth"]:r.totalSize+"px"}),class:T(["vue-recycle-scroller__item-wrapper",i.listClass])},{default:b((()=>[(p(!0),f($,null,S(r.pool,(t=>(p(),v(w(i.itemTag),_({key:t.nr.id,style:r.ready?{transform:`translate${"vertical"===e.direction?"Y":"X"}(${t.position}px) translate${"vertical"===e.direction?"X":"Y"}(${t.offset}px)`,width:i.gridItems?`${"vertical"===e.direction&&i.itemSecondarySize||i.itemSize}px`:void 0,height:i.gridItems?`${"horizontal"===e.direction&&i.itemSecondarySize||i.itemSize}px`:void 0}:null,class:["vue-recycle-scroller__item-view",[i.itemClass,{hover:!i.skipHover&&r.hoverKey===t.nr.key}]]},z(i.skipHover?{}:{mouseenter:()=>{r.hoverKey=t.nr.key},mouseleave:()=>{r.hoverKey=null}})),{default:b((()=>[y(e.$slots,"default",{item:t.item,index:t.nr.index,active:t.nr.used})])),_:2},1040,["style","class"])))),128)),y(e.$slots,"empty")])),_:3},8,["style","class"])),e.$slots.after?(p(),f("div",A,[y(e.$slots,"after")],512)):g("v-if",!0),x(o,{onNotify:l.handleResize},null,8,["onNotify"])],34)),[[n,l.handleVisibilityChange]])},B.__file="src/components/RecycleScroller.vue";export{B as s};
